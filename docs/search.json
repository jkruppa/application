[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Beispielhafte Auswertungen",
    "section": "",
    "text": "Was wollen wir hier gemeinsam machen? Ich werde in den folgenden Kapiteln Daten auswerten. Manche Sachen sind dort auch doppelt srin oder aber kennst du schon aus meinen Vorlesungen. Mir macht es einfach Spaß Daten auszuwerten und ich muss mir die Sachen immer aufschreiben, damit ich auch das Thema durchdringe. Daher dient die Sammlung an Beispielen zum einen als ein Fundus für Beispiel in meinen Vorlesungen oder aber für dich als eine Inspiration was alles möglich ist. Eventuell findest du ja dein Problem wieder… oder hast eine andere Idee wie du noch deine Daten auswerten könntest. Guck also einfach mal durch ob du was passendes findest.\nAlle Beispiele sind aus meiner beratenden Tätigkeit hier an der Hochschule Osnabrück entstanden. Keins der Beispiele ist so echt. Ich habe die Daten geändert und Behandlungen entfernt oder dazu genommen. Teilweise habe ichg mir die Geschichte um die Fragestellung auch einfach ausgedacht.\n\n\nWie erreichst du mich? Am einfachsten über die gute, alte E-Mail. Bitte bachte, dass gerade kurz vor den Prüfungen ich mehr E-Mails kriege. Leider kann es dann einen Tick dauern.\n\n\n\n\n\nEinfach an j.kruppa@hs-osnabrueck.de schreiben. Du findest hier auch eine kurze Formulierungshilfe. Einfach auf den Ausklapppfeil klicken.\n\n\n\n\n\n\nE-Mailvorlage mit beispielhafter Anrede\n\n\n\n\n\nHallo Herr Kruppa,\n… ich belege gerade Ihr Modul Modulname und hätte eine Bitte/Frage/Anregung…\n… ich benötige Hilfe bei der Planung/Auswertung meiner Bachelorarbeit…\nMit freundlichen Grüßen\nM. Muster"
  },
  {
    "objectID": "example-analysis-preface.html",
    "href": "example-analysis-preface.html",
    "title": "Beispielhafte Auswertungen",
    "section": "",
    "text": "Version vom März 14, 2023 um 14:24:10\n\n\n\n\n\n\nBeispielhafte Auswertungen per Video\n\n\n\nDu findest auf YouTube in der Playlist Spielweise in R (Level 3) viele der Analysen hier einmal als Video. Ich werde zwar alles nochmal hier als Text aufschreiben, aber manchmal ist das Sehen und Hören dann einfacher.\n\n\nWorum geht es in diesem Kapitel? Ich rechne hier fröhlich Dinge und präsentiere dann die Ergebnisse. Das heißt, du findest hier beispielhafte Auswertungen, die eventuell auch deine Problemstellung betreffen. Da ich selber meist keine Ahnung von der Biologie hinter den Experimenten habe, musst du mir nachsehen, dass ich hier nie zu einem echten biologischen Schluss oder Auswertung komme.\n\nIn Kapitel 1 schauen wir uns einmal die Erstellung eines Isoplethendiagramms für Münster & Osnabrück aus den frei verfügbaren Daten des Deutschen Wetterdienstes an.\nIn Kapitel 2 rechnen wir einmal ein simples Beispiel für Zähldaten in zwei Gruppen. Wir haben hier nicht wiederholt gezählt, sondern nur jeweils einmal an einer Stelle."
  },
  {
    "objectID": "example-analysis-01.html",
    "href": "example-analysis-01.html",
    "title": "1  Isoplethendiagramm für Münster & Osnabrück",
    "section": "",
    "text": "Wir wollen folgende R Pakete in diesem Kapitel nutzen.\n\npacman::p_load(tidyverse, magrittr)\n\nIm Folgenden zeige ich ein Beispiel für die Nutzung der entgeltfreien Informationen auf der DWD-Website. Wir finden dort auf der Seite die Klimadaten für Deutschland und natürlich auch die Daten für Münster/Osnabrück. Ich habe mir flux die Tageswerte runtergeladen und noch ein wenig den Header der txt-Datei angepasst. Du findest die Datei day_values_osnabrueck.txt wie immer auf meiner GitHub Seite. Du musst dir für andere Orte die Daten nur entsprechend zusammenbauen. Am Ende brauchen wir noch die Informationen zu den Tages- und Monatswerten damit wir auch verstehen, was wir uns da von der DWD runtergeladen haben. Ich nutze gleich nur einen Ausschnitt aus den Daten.\n\n\nWenn wir Geocomputation with R machen wollen, dann haben wir natürlich noch viele andere Möglichkeiten. Das verlinkte Buch hilft da weiter.\nDann lesen wir die Daten einmal ein und müssen dann eine Winkelzüge machen, damit wir aus dem Datum JJJJMMDD dann jeweils den Monat und den Tag extrahiert kriegen. Dann müssen wir die Monatszahl und die Tageszahl noch in eine Zahl umwandeln. Sonst geht es schlecht mit dem Zeichnen des Konturplots. Wir nehmen dann die Temperaturen TG, TN, TM und TX um diese Temperaturen in vier Konturplots zu zeigen.\n\nweather_tbl <- read_table(\"data/day_values_osnabrueck.txt\") %>% \n  mutate(JJJJMMDD = as.Date(as.character(JJJJMMDD), \"%Y%m%d\"),\n         day = as.numeric(format(JJJJMMDD, \"%d\")), \n         month = as.numeric(format(JJJJMMDD, \"%m\")), \n         year = as.numeric(format(JJJJMMDD, \"%Y\"))) %>% \n  select(month, day, TG, TN, TM, TX) %>% \n  na.omit() %>% \n  gather(temp, grad, TG:TX) %>% \n  mutate(temp = factor(temp, \n                       labels = c(\"Minimum der Temperatur in 5 cm (TG)\",\n                                  \"Minimum der Temperatur in 2 m (TN)\",\n                                  \"Mittel der Temperatur in 2 m (TM)\",\n                                  \"Maximum der Temperatur in 2 m (TX)\")))\n\nNachdem wir ordentlich an den Daten geschraubt haben können wir jetzt in Abbildung 1.1 die vier Konturplots sehen. Wir mussten noch das Spektrum der Farben einmal drehen, damit es auch mit den Temperaturfarben passt und wir haben noch ein paar Hilfslinien miteingezeichnet.\n\nggplot(weather_tbl, aes(month, day, z = grad)) +\n  theme_minimal() +\n  geom_contour_filled(bins = 13) +\n  geom_contour(binwidth = 2, color = \"black\") +\n  facet_wrap(~ temp, ncol = 2) + \n  scale_fill_brewer(palette = \"Spectral\", direction = -1) +\n  scale_x_continuous(breaks = 1:12) +\n  geom_vline(xintercept = 1:12, alpha = 0.9, linetype = 2) +\n  geom_hline(yintercept = c(5, 10, 15, 20, 25, 30), \n             alpha = 0.9, linetype = 2)\n\n\n\n\nAbbildung 1.1— Konturplot der verschiedenen Temperaturen."
  },
  {
    "objectID": "example-analysis-02.html",
    "href": "example-analysis-02.html",
    "title": "2  Analyse von Anzahlen in zwei Gruppen",
    "section": "",
    "text": "Wir wollen folgende R Pakete in diesem Kapitel nutzen.\n\npacman::p_load(tidyverse, magrittr, effectsize, see)\n\nIn dieser sehr simplen Analyse haben wir zwei Gruppen vorliegen. Die Gruppe 1 ist hat zwei Level oder Behandlungen abgekürzt mit I und II. Die Gruppe 2 hat insgesamt vier Level oder eben Behandlungen, die wir mit A, B, C und D bezeichnen. Wir haben jetzt für die jeweiligen Kombinationen auf dem Feld etwas gezählt. Wir haben also für jede dieser Kombinationen nur eine Zahl. Es ergbit sich somit die folgende Matrix an Zahlen.\n\nrel_mat <- matrix(c(45, 14, 4, 0,\n                    25, 32, 5, 1), nrow = 2, byrow = TRUE,\n                  dimnames = list(c(\"I\", \"II\"), c(\"A\", \"B\", \"C\", \"D\")))\nrel_mat\n\n    A  B C D\nI  45 14 4 0\nII 25 32 5 1\n\n\nNun können wir den \\(\\mathcal{X}^2\\)-Test nutzen, um zu testen, ob die Zahlen in der Matrix bzw. auf unseren Feld gelcihverteilt sind. Die Nullhypothese lautet, dass es keinen Zusammenhang zwischen der Gruppe 1 und der Gruppe 2 auf dem Feld gibt. Die Zahlen sind also rein zufällig in dieser Anordnung.\n\nchisq.test(rel_mat)\n\n\n    Pearson's Chi-squared test\n\ndata:  rel_mat\nX-squared = 13.869, df = 3, p-value = 0.003089\n\n\nWir erhalten einen sehr kleinen \\(p\\)-Wert mit \\(0.003\\). Wir können daher die Nullhypothese ablehnen, da der \\(p\\)-Wert kleiner ist als das Signifikanzniveau \\(\\alpha\\) mit 5%. Wir haben ein signifikantes Ergebnis. Wir können von einen Zusamenhang zwischen den beiden Gruppen ausgehen.\nMit Cramers V können wir auch noch die Effektstärke für einen \\(\\mathcal{X}^2\\)-Test berechnen.\n\ncramers_v(rel_mat) \n\nCramer's V (adj.) |       95% CI\n--------------------------------\n0.29              | [0.00, 1.00]\n\n- One-sided CIs: upper bound fixed at [1.00].\n\n\nDer Effekt ist mit \\(0.33\\) nicht besonders stark. Du kannst Cramers V wie die Korrelation interpretieren. Ein V von 0 bedeutet keinen Zusammenhang und ein V von 1 einen maximalen Zusammenhang. Wir wollen uns die Daten dann nochmal in einer Abbidlung anschauen. Dafür müssen wir die Matrix erstmal in einen Datensatz umwandeln und die Gruppen zu Faktoren machen.\n\nplot_tbl <- rel_mat %>% \n  as_tibble(rownames = \"group1\") %>% \n  gather(A:D, key = \"group2\", value = \"value\") %>% \n  mutate(group1 = as_factor(group1),\n         group2 = as_factor(group2))\n\nIn Abbildung 2.1 sehen wir die Matrix der Zähldaten für die beiden Gruppen nochmal visualisiert. Beim betrachten fällt auf, dass die beiden Level C und D kaum Zähldaten enthalten. Hier wäre zu überlegen die beiden Level aus der Analyse herauszunehmen und einen klassischen \\(\\mathcal{X}^2\\)-Test auf einer 2x2 Kreuztabelle zu rechnen.\n\nggplot(plot_tbl, aes(x = group2, y = value, fill = group1)) +\n  theme_bw() +\n  geom_bar(stat = \"identity\", position = position_dodge()) +\n  labs(x = \"Gruppe 2\", y = \"Anzahl\", fill = \"Gruppe 1\") +\n  scale_fill_okabeito() \n\n\n\n\nAbbildung 2.1— Barplot der Zähldaten aus der Matrix."
  }
]